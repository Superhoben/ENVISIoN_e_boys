diff --git a/include/inviwo/core/datastructures/tfprimitiveset.h b/include/inviwo/core/datastructures/tfprimitiveset.h
index 049286a08..f577afce6 100644
--- a/include/inviwo/core/datastructures/tfprimitiveset.h
+++ b/include/inviwo/core/datastructures/tfprimitiveset.h
@@ -195,6 +195,7 @@ public:
      * @returns if a primitive was found and removed
      */
     bool remove(const TFPrimitive& primitive);
+    bool removeByValue(const TFPrimitive& primitive);
 
     void clear();
 
diff --git a/modules/python3/bindings/src/pyproperties.cpp b/modules/python3/bindings/src/pyproperties.cpp
index fe2c79d82..5bc5070af 100644
--- a/modules/python3/bindings/src/pyproperties.cpp
+++ b/modules/python3/bindings/src/pyproperties.cpp
@@ -232,6 +232,8 @@ void exposeProperties(py::module &m) {
         .def("add", [](TransferFunctionProperty &tp, const TFPrimitiveData &v) { tp.get().add(v); })
         .def("add", [](TransferFunctionProperty &tp,
                        const std::vector<TFPrimitiveData> &values) { tp.get().add(values); })
+        .def("remove", [](TransferFunctionProperty &tp, const TFPrimitive& primitive) -> bool
+            { return tp.get().removeByValue(primitive); })
         .def("setValues",
              [](TransferFunctionProperty &tp, const std::vector<TFPrimitiveData> &values) {
                  tp.get().clear();
@@ -241,6 +243,10 @@ void exposeProperties(py::module &m) {
              [](TransferFunctionProperty &tp) -> std::vector<TFPrimitiveData> {
                  return tp.get().get();
              })
+        .def("getValueAt",
+             [](TransferFunctionProperty &tp, size_t i) -> TFPrimitive& {
+                 return tp.get().get(i);
+             })
         .def("__repr__", [](const TransferFunctionProperty &tp) {
             std::ostringstream oss;
             oss << "<TransferFunctionProperty:  " << tp.get().size() << " TF points";
diff --git a/src/core/datastructures/tfprimitiveset.cpp b/src/core/datastructures/tfprimitiveset.cpp
index 1e8dc02ad..2912a416f 100644
--- a/src/core/datastructures/tfprimitiveset.cpp
+++ b/src/core/datastructures/tfprimitiveset.cpp
@@ -242,6 +242,13 @@ bool TFPrimitiveSet::remove(const TFPrimitive& primitive) {
     return remove(it);
 }
 
+bool TFPrimitiveSet::removeByValue(const TFPrimitive& primitive) {
+    auto it = std::find_if(values_.begin(), values_.end(),
+                           [&](const auto& v) { return primitive.getData().pos == v.get()->getData().pos; });
+
+    return remove(it);
+}
+
 void TFPrimitiveSet::add(std::unique_ptr<TFPrimitive> primitive) {
     if ((type_ == TFPrimitiveSetType::Relative) &&
         ((primitive->getPosition() < 0.0f) || (primitive->getPosition() > 1.0f))) {
diff --git a/tools/codegen/warn/warn b/tools/codegen/warn/warn
--- a/tools/codegen/warn/warn
+++ b/tools/codegen/warn/warn
@@ -1 +1 @@
-Subproject commit 6250f589e8eb8f8149553b9dca0f7ddb60171d64
+Subproject commit 6250f589e8eb8f8149553b9dca0f7ddb60171d64-dirty

